{"entries":[{"timestamp":1735056667334,"editorVersion":"7.0.51","changes":[{"type":"edited","filename":"main.blocks","patch":[{"diffs":[[0,"http"],[-1,"s"],[0,"://"],[-1,"developers.google.com/blockly/xml\"><variables></variables>"],[1,"www.w3.org/1999/xhtml\">\n  "],[0,"<blo"]],"start1":12,"start2":12,"length1":70,"length2":37},{"diffs":[[0,"art\""],[-1," x=\"20\" y=\"20\""],[0,"></b"]],"start1":67,"start2":67,"length1":22,"length2":8},{"diffs":[[0,"</block>"],[1,"\n  "],[0,"<block t"]],"start1":72,"start2":72,"length1":16,"length2":19},{"diffs":[[0,"ver\""],[-1," x=\"225\" y=\"20\""],[0,"></b"]],"start1":107,"start2":107,"length1":23,"length2":8},{"diffs":[[0,"</block>"],[1,"\n"],[0,"</xml>"]],"start1":112,"start2":112,"length1":14,"length2":15}]},{"type":"edited","filename":"main.ts","patch":[{"diffs":[[-1,"basic.forever(function () {\n\t\n})"],[0,"\n"]],"start1":0,"start2":0,"length1":33,"length2":1}]},{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0,".md\""],[-1,",\n        \"AI-clasification.ts\"\n    ],\n    \"preferredEditor\": \"tsprj\""],[1,"\n    ],\n    \"additionalFilePaths\": []"],[0,"\n}\n"]],"start1":222,"start2":222,"length1":76,"length2":44}]},{"type":"added","filename":"AI-clasification.ts","value":"//AI clasification\nlet trainingdataVec = [[0]]\nlet trainingdataClass = [0]\nlet startofTrainingData = true\nlet vectorsize = 0\nnamespace addtodataset {\n    //% block\n    export function addtodata(numlist:vector ) {\n        if (startofTrainingData) {\n            trainingdataVec =\n        }\n    }\n}"}]},{"timestamp":1735057170164,"editorVersion":"7.0.51","changes":[{"type":"edited","filename":"main.blocks","patch":[{"diffs":[[0,"><block "],[1,"type=\"pxt-on-start\" x=\"20\" y=\"20\"></block><block "],[0,"type=\"de"]],"start1":77,"start2":77,"length1":16,"length2":65},{"diffs":[[0,"ver\" x=\""],[-1,"0"],[1,"225"],[0,"\" y=\""],[1,"2"],[0,"0\"></blo"]],"start1":151,"start2":151,"length1":22,"length2":25}]},{"type":"edited","filename":"AI-clasification.ts","patch":[{"diffs":[[0," = ["],[-1,"\"\""],[1,"0"],[0,"]\nle"]],"start1":68,"start2":68,"length1":10,"length2":9},{"diffs":[[0,"ata("],[-1,"vector: number[], classname: string"],[1,"numlist:vector "],[0,") {\n"]],"start1":190,"start2":190,"length1":43,"length2":23},{"diffs":[[0,"ec ="],[-1," [vector]\n            trainingdataClass = [classname]\n            startofTrainingData = false\n        } else {\n            trainingdataVec.push(vector)\n            trainingdataClass.push(classname)"],[0,"\n   "]],"start1":273,"start2":273,"length1":205,"length2":8}]}]},{"timestamp":1735057748550,"editorVersion":"7.0.51","changes":[{"type":"edited","filename":"main.blocks","patch":[{"diffs":[[0," x=\""],[-1,"2"],[0,"0\" y=\""],[-1,"2"],[0,"0\"><"]],"start1":106,"start2":106,"length1":16,"length2":14}]},{"type":"edited","filename":"AI-clasification.ts","patch":[{"diffs":[[0,"= 0\n"],[-1,"namespace setvecsize {\n    \n}\n"],[0,"name"]],"start1":122,"start2":122,"length1":38,"length2":8}]}]},{"timestamp":1735058342715,"editorVersion":"7.0.51","changes":[{"type":"edited","filename":"main.blocks","patch":[{"diffs":[[0," x=\""],[-1,"40\" y=\"54\"><statement name=\"HANDLER\"><block type=\"AI_setvecsize\"><value name=\"size\"><shadow type=\"math_number\"><field name=\"NUM\">1</field></shadow></value><next><block type=\"AI_addtodata\"><value name=\"vector\"><block type=\"lists_create_with\"><mutation items=\"1\" horizontalafter=\"2\"></mutation><value name=\"ADD0\"><shadow type=\"math_number\"><field name=\"NUM\">0</field></shadow></value></block></value><value name=\"classname\"><shadow type=\"text\"><field name=\"TEXT\">small</field></shadow></value><next><block type=\"AI_addtodata\"><value name=\"vector\"><block type=\"lists_create_with\"><mutation items=\"1\" horizontalafter=\"2\"></mutation><value name=\"ADD0\"><shadow type=\"math_number\"><field name=\"NUM\">5</field></shadow></value></block></value><value name=\"classname\"><shadow type=\"text\"><field name=\"TEXT\">big</field></shadow></value></block></next></block></next></block></statement"],[1,"20\" y=\"20\""],[0,"></b"]],"start1":106,"start2":106,"length1":882,"length2":18}]},{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,") {\n"],[-1,"    AI.setvecsize(1)\n    AI.addtodata([0], \"small\")\n    AI.addtodata([5], \"big\")"],[1,"\t"],[0,"\n})\n"]],"start1":24,"start2":24,"length1":88,"length2":9}]},{"type":"edited","filename":"AI-clasification.ts","patch":[{"diffs":[[0,"ize = 0\n"],[-1,"\n"],[0,"namespac"]],"start1":118,"start2":118,"length1":17,"length2":16},{"diffs":[[0,"ace "],[-1,"AI {\n    function distance (vec1: number[], vec2: number[]) {\n        for (let i = 0; i < vec1.lenght; i++) {\n            \n        }\n    }\n    //% block\n    export function setvecsize(size: number) {\n        vectorsize = size\n    }"],[1,"setvecsize {\n    \n}\nnamespace addtodataset {"],[0,"\n   "]],"start1":132,"start2":132,"length1":239,"length2":52}]}]},{"timestamp":1735058941981,"editorVersion":"7.0.51","changes":[{"type":"edited","filename":"main.blocks","patch":[{"diffs":[[0," x=\""],[1,"4"],[0,"0\" y=\""],[-1,"0"],[1,"54"],[0,"\"><s"]],"start1":106,"start2":106,"length1":15,"length2":17},{"diffs":[[0,"orizontalafter=\""],[-1,"3"],[1,"2"],[0,"\"></mutation><va"]],"start1":372,"start2":372,"length1":33,"length2":33},{"diffs":[[0,"er=\""],[-1,"3"],[1,"2"],[0,"\"></"]],"start1":720,"start2":720,"length1":9,"length2":9}]},{"type":"edited","filename":"AI-clasification.ts","patch":[{"diffs":[[0,"distance"],[1," "],[0,"(vec1: n"]],"start1":155,"start2":155,"length1":16,"length2":17},{"diffs":[[0,") {\n"],[-1,"        let distsquared = 0\n"],[0,"    "]],"start1":195,"start2":195,"length1":36,"length2":8},{"diffs":[[0,"leng"],[-1,"t"],[0,"h"],[1,"t"],[0,"; i+"]],"start1":232,"start2":232,"length1":10,"length2":10},{"diffs":[[0,"    "],[-1,"distsquared += (vec1[i] - vec2[i]) * (vec1[i] - vec2[i])\n        }\n        return distsquared"],[1,"\n        }"],[0,"\n   "]],"start1":255,"start2":255,"length1":101,"length2":18}]}]},{"timestamp":1735059508533,"editorVersion":"7.0.51","changes":[{"type":"edited","filename":"AI-clasification.ts","patch":[{"diffs":[[0,"  }\n"],[-1,"    //% block\n    export function clasify(vector: number[]) {\n        let neardist = Infinity\n        let nearclass = \"\"\n        for (let i = 0; i < trainingdataClass.length; i++) {\n            if(neardist > distance(vector, trainingdataVec[i])) {\n                neardist = distance(vector, trainingdataVec[i])\n                nearclass = trainingdataClass[i]\n            }\n        }\n        return nearclass\n    }\n"],[0,"}"]],"start1":836,"start2":836,"length1":421,"length2":5}]}]},{"timestamp":1735060100851,"editorVersion":"7.0.51","changes":[{"type":"edited","filename":"main.blocks","patch":[{"diffs":[[0,"e=\"NUM\">"],[-1,"2"],[1,"1"],[0,"</field>"]],"start1":229,"start2":229,"length1":17,"length2":17},{"diffs":[[0,"mutation items=\""],[-1,"2"],[1,"1"],[0,"\" horizontalafte"]],"start1":350,"start2":350,"length1":33,"length2":33},{"diffs":[[0,"ue><"],[-1,"value name=\"ADD1\"><shadow type=\"math_number\"><field name=\"NUM\">1</field></shadow></value><"],[0,"/blo"]],"start1":487,"start2":487,"length1":98,"length2":8},{"diffs":[[0,"XT\">"],[-1,"upper"],[1,"small"],[0,"</fi"]],"start1":565,"start2":565,"length1":13,"length2":13},{"diffs":[[0,"mutation items=\""],[-1,"2"],[1,"1"],[0,"\" horizontalafte"]],"start1":686,"start2":686,"length1":33,"length2":33},{"diffs":[[0,"UM\">"],[-1,"1</field></shadow></value><value name=\"ADD1\"><shadow type=\"math_number\"><field name=\"NUM\">0"],[1,"5"],[0,"</fi"]],"start1":796,"start2":796,"length1":99,"length2":9},{"diffs":[[0,"XT\">"],[-1,"lower</field></shadow></value><next><block type=\"device_print_message\"><value name=\"text\"><shadow type=\"text\" disabled-reasons=\"MANUALLY_DISABLED\"><field name=\"TEXT\">Hello!</field></shadow><block type=\"AI_clasify\"><value name=\"vector\"><block type=\"lists_create_with\"><mutation items=\"2\" horizontalafter=\"2\"></mutation><value name=\"ADD0\"><shadow type=\"math_number\"><field name=\"NUM\">1</field></shadow></value><value name=\"ADD1\"><shadow type=\"math_number\"><field name=\"NUM\">0</field></shadow></value></block></value></block></value></block></next"],[1,"big</field></shadow></value"],[0,"></b"]],"start1":901,"start2":901,"length1":552,"length2":35}]},{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"ize("],[-1,"2"],[1,"1"],[0,")\n  "]],"start1":42,"start2":42,"length1":9,"length2":9},{"diffs":[[0,"a([0"],[-1,", 1"],[0,"], \""],[-1,"upper"],[1,"small"],[0,"\")\n "]],"start1":64,"start2":64,"length1":20,"length2":17},{"diffs":[[0,"ta(["],[-1,"1, 0], \"lower\")\n    basic.showString(AI.clasify([1, 0])"],[1,"5], \"big\""],[0,")\n})"]],"start1":94,"start2":94,"length1":63,"length2":17}]},{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0,"itor\": \""],[-1,"block"],[1,"t"],[0,"sprj\"\n}\n"]],"start1":281,"start2":281,"length1":21,"length2":17}]},{"type":"edited","filename":"AI-clasification.ts","patch":[{"diffs":[[0," \"\"\n"],[-1,"        let temp = 0\n"],[0,"    "]],"start1":957,"start2":957,"length1":29,"length2":8},{"diffs":[[0,"        "],[-1,"temp ="],[1,"if(neardist >"],[0," distanc"]],"start1":1026,"start2":1026,"length1":22,"length2":29},{"diffs":[[0,"[i])"],[-1,"\n            if(temp == 0) {\n                nearclass = trainingdataClass[i]\n                break\n            }\n            if(neardist > temp) {\n                neardist = temp\n                nearclass = trainingdataClass[i]\n            }\n        }\n        return nearclass\n    }\n    //% block\n    export function deletetrainingdata() {\n        trainingdataVec = [[0]]\n        trainingdataClass = [\"\"]\n        startofTrainingData = true"],[1,") {\n                neardist = distance(vector, trainingdataVec[i])\n                nearclass = trainingdataClass[i]\n            }\n        }\n        return nearclass"],[0,"\n   "]],"start1":1080,"start2":1080,"length1":448,"length2":173}]}]},{"timestamp":1735060569197,"editorVersion":"7.0.51","changes":[{"type":"edited","filename":"main.blocks","patch":[{"diffs":[[0,"0\"><"],[-1,"/block><block type=\"AI_setvecsize\" disabled-reasons=\"MANUALLY_DISABLED\" x=\"0\" y=\"0\""],[1,"statement name=\"HANDLER\"><block type=\"AI_setvecsize\"><value name=\"size\"><shadow type=\"math_number\"><field name=\"NUM\">2</field></shadow></value><next><block type=\"AI_addtodata\"><value name=\"vector\"><block type=\"lists_create_with\"><mutation items=\"2\" horizontalafter=\"3\"></mutation><value name=\"ADD0\"><shadow type=\"math_number\"><field name=\"NUM\">0</field></shadow></value><value name=\"ADD1\"><shadow type=\"math_number\"><field name=\"NUM\">1</field></shadow></value></block></value><value name=\"classname\"><shadow type=\"text\"><field name=\"TEXT\">upper</field></shadow></value><next><block type=\"AI_addtodata\"><value name=\"vector\"><block type=\"lists_create_with\"><mutation items=\"2\" horizontalafter=\"3\"></mutation><value name=\"ADD0\"><shadow type=\"math_number\"><field name=\"NUM\">1</field></shadow></value><value name=\"ADD1\"><shadow type=\"math_number\"><field name=\"NUM\">0</field></shadow></value></block></value><value name=\"classname\"><shadow type=\"text\"><field name=\"TEXT\">lower</field></shadow></value><next><block type=\"device_print_message\"><value name=\"text\"><shadow type=\"text\" disabled-reasons=\"MANUALLY_DISABLED\"><field name=\"TEXT\">Hello!</field></shadow><block type=\"AI_clasify\"><value name=\"vector\"><block type=\"lists_create_with\"><mutation items=\"2\" horizontalafter=\"2\"></mutation><value name=\"ADD0\"><shadow type=\"math_number\"><field name=\"NUM\">1</field></shadow></value><value name=\"ADD1\"><shadow type=\"math_number\"><field name=\"NUM\">0</field></shadow></value></block></value></block></value></block></next></block></next></block></next></block></statement"],[0,"></b"]],"start1":116,"start2":116,"length1":91,"length2":1567}]},{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,") {\n"],[-1,"\t"],[1,"    AI.setvecsize(2)\n    AI.addtodata([0, 1], \"upper\")\n    AI.addtodata([1, 0], \"lower\")\n    basic.showString(AI.clasify([1, 0]))"],[0,"\n})\n"]],"start1":24,"start2":24,"length1":9,"length2":137}]},{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0,"itor\": \""],[-1,"t"],[1,"block"],[0,"sprj\"\n}\n"]],"start1":281,"start2":281,"length1":17,"length2":21}]},{"type":"edited","filename":"AI-clasification.ts","patch":[{"diffs":[[0," 0\n\n"],[-1,"//% color = \"#f59df5\"\n\n"],[0,"name"]],"start1":123,"start2":123,"length1":31,"length2":8}]}]},{"timestamp":1735060865195,"editorVersion":"7.0.51","changes":[{"type":"edited","filename":"AI-clasification.ts","patch":[{"diffs":[[0,"9df5"],[-1,"FF"],[0,"\"\n\nn"]],"start1":143,"start2":143,"length1":10,"length2":8}]}]},{"timestamp":1735062011721,"editorVersion":"7.0.51","changes":[{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0,"itor\": \""],[-1,"block"],[1,"t"],[0,"sprj\"\n}\n"]],"start1":281,"start2":281,"length1":21,"length2":17}]}]},{"timestamp":1735062016469,"editorVersion":"7.0.51","changes":[{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0," \"*\""],[-1,",\n        \"Screenshot\": \"workspace:b5bce627-58b3-4395-62c8-b32e85436c61\""],[0,"\n   "]],"start1":138,"start2":138,"length1":80,"length2":8},{"diffs":[[0,"itor\": \""],[-1,"t"],[1,"block"],[0,"sprj\"\n}\n"]],"start1":281,"start2":281,"length1":17,"length2":21}]},{"type":"edited","filename":"AI-clasification.ts","patch":[{"diffs":[[0,"olor"],[-1,"=\"#d7"],[1," = \"#f5"],[0,"9df5"],[1,"FF"],[0,"\"\n\nn"]],"start1":132,"start2":132,"length1":17,"length2":21}]}]},{"timestamp":1735062636143,"editorVersion":"7.0.51","changes":[{"type":"edited","filename":"AI-clasification.ts","patch":[{"diffs":[[0,"df5\""],[-1,"\nicon = \"\\uf030\""],[0,"\n\nna"]],"start1":142,"start2":142,"length1":24,"length2":8}]}]},{"timestamp":1735062641614,"editorVersion":"7.0.51","changes":[{"type":"edited","filename":"AI-clasification.ts","patch":[{"diffs":[[-1,"\n"],[0,"//AI cla"]],"start1":0,"start2":0,"length1":9,"length2":8},{"diffs":[[0,"#d79df5\""],[1,"\nicon = \"\\uf030\""],[0,"\n\nnamesp"]],"start1":138,"start2":138,"length1":16,"length2":32},{"diffs":[[0,"      if"],[-1," "],[0,"(temp =="]],"start1":1142,"start2":1142,"length1":17,"length2":16},{"diffs":[[0,"      if"],[-1," "],[0,"(neardis"]],"start1":1255,"start2":1255,"length1":17,"length2":16}]}]},{"timestamp":1735063496244,"editorVersion":"7.0.51","changes":[{"type":"edited","filename":"main.blocks","patch":[{"diffs":[[0," x=\""],[-1,"1"],[1,"0\" y=\"0\"></block><block type=\"AI_setvecsize\" disabled-reasons=\"MANUALLY_DISABLED\" x=\""],[0,"0\" y=\""],[-1,"1"],[0,"0\"><"]],"start1":106,"start2":106,"length1":16,"length2":99}]}]},{"timestamp":1735063535559,"editorVersion":"7.0.51","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[-1,"AI.setvecsize(2)\nAI.addtodata([0, 1], \"<\")\nAI.addtodata([1, 0], \">\")\nbasic.showString(AI.clasify([5, 3])"],[1,"basic.forever(function () {\n\t\n}"],[0,")\n"]],"start1":0,"start2":0,"length1":106,"length2":33}]},{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0,"les\": [\n"],[1,"        \"main.blocks\",\n"],[0,"        "]],"start1":229,"start2":229,"length1":16,"length2":39},{"diffs":[[0,".ts\""],[-1,",\n        \"main.py\""],[0,"\n   "]],"start1":325,"start2":325,"length1":27,"length2":8},{"diffs":[[0,"\": \""],[-1,"py"],[1,"ts"],[0,"prj\""]],"start1":357,"start2":357,"length1":10,"length2":10}]},{"type":"edited","filename":"AI-clasification.ts","patch":[{"diffs":[[0," 0\n\n"],[-1,"//% color=340\n"],[0,"//% "]],"start1":124,"start2":124,"length1":22,"length2":8}]},{"type":"removed","filename":"main.blocks","value":"<xml xmlns=\"https://developers.google.com/blockly/xml\"><variables></variables><block type=\"device_forever\" x=\"10\" y=\"10\"></block></xml>"},{"type":"added","filename":"main.py","value":"AI.setvecsize(2)\nAI.addtodata([0, 1], \"<\")\nAI.addtodata([1, 0], \">\")\nbasic.show_string(AI.clasify([5, 3]))"}]},{"timestamp":1735064138496,"editorVersion":"7.0.51","changes":[{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0,"itor\": \""],[-1,"ts"],[1,"py"],[0,"prj\"\n}\n"]],"start1":349,"start2":349,"length1":17,"length2":17}]}]},{"timestamp":1735064399541,"editorVersion":"7.0.51","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[1,"AI.setvecsize(2)\nAI.addtodata([0, 1], \"<\")\nAI.addtodata([1, 0], \">\")\nbasic.showString(AI.clasify([5, 3]))\n"]],"start1":0,"start2":0,"length1":0,"length2":106}]},{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0," \"AI"],[-1," Clasificat"],[1,"extens"],[0,"ion\""]],"start1":13,"start2":13,"length1":19,"length2":14},{"diffs":[[0,"re\": \"*\""],[1,",\n        \"radio\": \"*\",\n        \"microphone\": \"*\",\n        \"Screenshot\": \"workspace:b5bce627-58b3-4395-62c8-b32e85436c61\""],[0,"\n    },\n"]],"start1":85,"start2":85,"length1":16,"length2":137},{"diffs":[[0,"ME.md\",\n"],[-1,""],[0,"        "]],"start1":269,"start2":269,"length1":16,"length2":16},{"diffs":[[0,"tion.ts\""],[1,",\n        \"main.py\""],[0,"\n    ],\n"]],"start1":298,"start2":298,"length1":16,"length2":35}]},{"type":"edited","filename":"AI-clasification.ts","patch":[{"diffs":[[0,"df5\""],[-1,"\n//% icon=\"\""],[0,"\n\nna"]],"start1":157,"start2":157,"length1":21,"length2":8},{"diffs":[[0,"lock"],[-1,"=\"Set vector dimensionality (size) to $size\""],[0,"\n   "]],"start1":431,"start2":431,"length1":52,"length2":8},{"diffs":[[0,"lock"],[-1,"=\"Add to training dataset vector $vector , with classification $classname\""],[0,"\n   "]],"start1":524,"start2":524,"length1":82,"length2":8},{"diffs":[[0,"lock"],[-1,"=\"Clasify vector $vector\""],[0,"\n   "]],"start1":885,"start2":885,"length1":33,"length2":8},{"diffs":[[0,"class\n    }\n"],[1,""],[0,"    //% bloc"]],"start1":1408,"start2":1408,"length1":24,"length2":24},{"diffs":[[0,"lock"],[-1,"=\"Delete training dataset\""],[0,"\n   "]],"start1":1429,"start2":1429,"length1":34,"length2":8}]},{"type":"removed","filename":"main.py","value":"AI.setvecsize(2)\nAI.addtodata([0, 1], \"<\")\nAI.addtodata([1, 0], \">\")\nbasic.show_string(AI.clasify([5, 3]))"}]},{"timestamp":1735065635143,"editorVersion":"7.0.51","changes":[{"type":"edited","filename":"AI-clasification.ts","patch":[{"diffs":[[0," block=\""],[-1,"a"],[1,"A"],[0,"dd to tr"]],"start1":579,"start2":579,"length1":17,"length2":17}]}]},{"timestamp":1735065647898,"editorVersion":"7.0.51","changes":[{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0," ],\n"],[-1,"    \"testFiles\": [\n        \"test.ts\"\n    ],\n"],[0,"    "]],"start1":194,"start2":194,"length1":52,"length2":8}]},{"type":"edited","filename":"AI-clasification.ts","patch":[{"diffs":[[0," block=\""],[-1,"s"],[1,"S"],[0,"et vecto"]],"start1":442,"start2":442,"length1":17,"length2":17},{"diffs":[[0," block=\""],[-1,"c"],[1,"C"],[0,"lasify v"]],"start1":1014,"start2":1014,"length1":17,"length2":17},{"diffs":[[0," block=\""],[-1,"d"],[1,"D"],[0,"elete tr"]],"start1":1583,"start2":1583,"length1":17,"length2":17}]},{"type":"added","filename":"test.ts","value":"// tests go here; this will not be compiled when this package is used as an extension.\n"},{"type":"added","filename":"main.blocks","value":"<xml xmlns=\"http://www.w3.org/1999/xhtml\">\n  <block type=\"pxt-on-start\"></block>\n  <block type=\"device_forever\"></block>\n</xml>"}]}],"snapshots":[{"timestamp":1735056667333,"editorVersion":"7.0.51","text":{"main.blocks":"<xml xmlns=\"http://www.w3.org/1999/xhtml\">\n  <block type=\"pxt-on-start\"></block>\n  <block type=\"device_forever\"></block>\n</xml>","main.ts":"\n","README.md":"","pxt.json":"{\n    \"name\": \"AIextension\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"microphone\": \"*\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\"\n    ],\n    \"additionalFilePaths\": []\n}\n"}},{"timestamp":1735058467715,"editorVersion":"7.0.51","text":{"main.blocks":"<xml xmlns=\"https://developers.google.com/blockly/xml\"><variables></variables><block type=\"device_forever\" x=\"40\" y=\"54\"><statement name=\"HANDLER\"><block type=\"AI_setvecsize\"><value name=\"size\"><shadow type=\"math_number\"><field name=\"NUM\">1</field></shadow></value></block></statement></block></xml>","main.ts":"","README.md":"","AI-clasification.ts":"//AI clasification\nlet trainingdataVec = [[0]]\nlet trainingdataClass = [\"\"]\nlet startofTrainingData = true\nlet vectorsize = 0\n\nnamespace AI {\n    //% block\n    export function setvecsize(size: number) {\n        vectorsize = size\n    }\n    //% block\n    export function addtodata(vector: number[], classname: string) {\n        if (startofTrainingData) {\n            trainingdataVec = [vector]\n            trainingdataClass = [classname]\n            startofTrainingData = false\n        } else {\n            trainingdataVec.push(vector)\n            trainingdataClass.push(classname)\n        }\n    }\n}","pxt.json":"{\n    \"name\": \"AIextension\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"microphone\": \"*\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\",\n        \"AI-clasification.ts\"\n    ],\n    \"preferredEditor\": \"blocksprj\"\n}\n"}},{"timestamp":1735060270222,"editorVersion":"7.0.51","text":{"main.blocks":"<xml xmlns=\"https://developers.google.com/blockly/xml\"><variables></variables><block type=\"device_forever\" x=\"37\" y=\"53\"><statement name=\"HANDLER\"><block type=\"AI_setvecsize\"><value name=\"size\"><shadow type=\"math_number\"><field name=\"NUM\">2</field></shadow></value><next><block type=\"AI_addtodata\"><value name=\"vector\"><block type=\"lists_create_with\"><mutation items=\"2\" horizontalafter=\"3\"></mutation><value name=\"ADD0\"><shadow type=\"math_number\"><field name=\"NUM\">0</field></shadow></value><value name=\"ADD1\"><shadow type=\"math_number\"><field name=\"NUM\">1</field></shadow></value></block></value><value name=\"classname\"><shadow type=\"text\"><field name=\"TEXT\">upper</field></shadow></value><next><block type=\"AI_addtodata\"><value name=\"vector\"><block type=\"lists_create_with\"><mutation items=\"2\" horizontalafter=\"3\"></mutation><value name=\"ADD0\"><shadow type=\"math_number\"><field name=\"NUM\">1</field></shadow></value><value name=\"ADD1\"><shadow type=\"math_number\"><field name=\"NUM\">0</field></shadow></value></block></value><value name=\"classname\"><shadow type=\"text\"><field name=\"TEXT\">lower</field></shadow></value><next><block type=\"device_print_message\"><value name=\"text\"><shadow type=\"text\" disabled-reasons=\"MANUALLY_DISABLED\"><field name=\"TEXT\">Hello!</field></shadow><block type=\"AI_clasify\"><value name=\"vector\"><block type=\"lists_create_with\"><mutation items=\"2\" horizontalafter=\"2\"></mutation><value name=\"ADD0\"><shadow type=\"math_number\"><field name=\"NUM\">1</field></shadow></value><value name=\"ADD1\"><shadow type=\"math_number\"><field name=\"NUM\">4</field></shadow></value></block></value></block></value></block></next></block></next></block></next></block></statement></block></xml>","main.ts":"basic.forever(function () {\n    AI.setvecsize(2)\n    AI.addtodata([0, 1], \"upper\")\n    AI.addtodata([1, 0], \"lower\")\n    basic.showString(AI.clasify([1, 4]))\n})\n","README.md":"","AI-clasification.ts":"//AI clasification\nlet trainingdataVec = [[0]]\nlet trainingdataClass = [\"\"]\nlet startofTrainingData = true\nlet vectorsize = 0\n\nnamespace AI {\n    function distance(vec1: number[], vec2: number[]) {\n        let distsquared = 0\n        for (let i = 0; i < vec1.length; i++) {\n            distsquared += (vec1[i] - vec2[i]) * (vec1[i] - vec2[i])\n        }\n        return distsquared\n    }\n    //% block\n    export function setvecsize(size: number) {\n        vectorsize = size\n    }\n    //% block\n    export function addtodata(vector: number[], classname: string) {\n        if (startofTrainingData) {\n            trainingdataVec = [vector]\n            trainingdataClass = [classname]\n            startofTrainingData = false\n        } else {\n            trainingdataVec.push(vector)\n            trainingdataClass.push(classname)\n        }\n    }\n    //% block\n    export function clasify(vector: number[]) {\n        let neardist = Infinity\n        let nearclass = \"\"\n        let temp = 0\n        for (let i = 0; i < trainingdataClass.length; i++) {\n            temp = \n            if(neardist > distance(vector, trainingdataVec[i])) {\n                neardist = distance(vector, trainingdataVec[i])\n                nearclass = trainingdataClass[i]\n            }\n        }\n        return nearclass\n    }\n}","pxt.json":"{\n    \"name\": \"AIextension\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"microphone\": \"*\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\",\n        \"AI-clasification.ts\"\n    ],\n    \"preferredEditor\": \"tsprj\"\n}\n"}},{"timestamp":1735062196620,"editorVersion":"7.0.51","text":{"main.blocks":"<xml xmlns=\"https://developers.google.com/blockly/xml\"><variables></variables><block type=\"device_forever\" x=\"0\" y=\"0\"></block><block type=\"AI_setvecsize\" disabled-reasons=\"MANUALLY_DISABLED\" x=\"0\" y=\"0\"></block></xml>","main.ts":"basic.forever(function () {\n\t\n})\n","README.md":"","AI-clasification.ts":"//AI clasification\nlet trainingdataVec = [[0]]\nlet trainingdataClass = [\"\"]\nlet startofTrainingData = true\nlet vectorsize = 0\n\n//% color = \"#f59df5FF\"\n\nnamespace AI {\n    function distance(vec1: number[], vec2: number[]) {\n        let distsquared = 0\n        for (let i = 0; i < vec1.length; i++) {\n            distsquared += (vec1[i] - vec2[i]) * (vec1[i] - vec2[i])\n        }\n        return distsquared\n    }\n    //% block\n    export function setvecsize(size: number) {\n        vectorsize = size\n    }\n    //% block\n    export function addtodata(vector: number[], classname: string) {\n        if (startofTrainingData) {\n            trainingdataVec = [vector]\n            trainingdataClass = [classname]\n            startofTrainingData = false\n        } else {\n            trainingdataVec.push(vector)\n            trainingdataClass.push(classname)\n        }\n    }\n    //% block\n    export function clasify(vector: number[]) {\n        let neardist = Infinity\n        let nearclass = \"\"\n        let temp = 0\n        for (let i = 0; i < trainingdataClass.length; i++) {\n            temp = distance(vector, trainingdataVec[i])\n            if(temp == 0) {\n                nearclass = trainingdataClass[i]\n                break\n            }\n            if(neardist > temp) {\n                neardist = temp\n                nearclass = trainingdataClass[i]\n            }\n        }\n        return nearclass\n    }\n    //% block\n    export function deletetrainingdata() {\n        trainingdataVec = [[0]]\n        trainingdataClass = [\"\"]\n        startofTrainingData = true\n    }\n}","pxt.json":"{\n    \"name\": \"AIextension\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"microphone\": \"*\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\",\n        \"AI-clasification.ts\"\n    ],\n    \"preferredEditor\": \"tsprj\"\n}\n"}},{"timestamp":1735063997584,"editorVersion":"7.0.51","text":{"main.blocks":"<xml xmlns=\"https://developers.google.com/blockly/xml\"><variables></variables><block type=\"pxt-on-start\" x=\"-38\" y=\"142\"><statement name=\"HANDLER\"><block type=\"AI_setvecsize\"><value name=\"size\"><shadow type=\"math_number\"><field name=\"NUM\">2</field></shadow></value><next><block type=\"AI_addtodata\"><value name=\"vector\"><block type=\"lists_create_with\"><mutation items=\"2\" horizontalafter=\"2\"></mutation><value name=\"ADD0\"><shadow type=\"math_number\"><field name=\"NUM\">0</field></shadow></value><value name=\"ADD1\"><shadow type=\"math_number\"><field name=\"NUM\">1</field></shadow></value></block></value><value name=\"classname\"><shadow type=\"text\"><field name=\"TEXT\">&lt;</field></shadow></value><next><block type=\"AI_addtodata\"><value name=\"vector\"><block type=\"lists_create_with\"><mutation items=\"2\" horizontalafter=\"2\"></mutation><value name=\"ADD0\"><shadow type=\"math_number\"><field name=\"NUM\">1</field></shadow></value><value name=\"ADD1\"><shadow type=\"math_number\"><field name=\"NUM\">0</field></shadow></value></block></value><value name=\"classname\"><shadow type=\"text\"><field name=\"TEXT\">&gt;</field></shadow></value><next><block type=\"device_print_message\"><value name=\"text\"><shadow type=\"text\"><field name=\"TEXT\">Hello!</field></shadow><block type=\"AI_clasify\"><value name=\"vector\"><block type=\"lists_create_with\"><mutation items=\"2\" horizontalafter=\"2\"></mutation><value name=\"ADD0\"><shadow type=\"math_number\"><field name=\"NUM\">5</field></shadow></value><value name=\"ADD1\"><shadow type=\"math_number\"><field name=\"NUM\">3</field></shadow></value></block></value></block></value></block></next></block></next></block></next></block></statement></block></xml>","main.ts":"// AI.setvecsize(2)\n// AI.addtodata([0, 1], \"<\")\n// AI.addtodata([1, 0], \">\")\n// basic.showString(AI.clasify([5, 3]))\n// ","README.md":"","AI-clasification.ts":"\n//AI clasification\nlet trainingdataVec = [[0]]\nlet trainingdataClass = [\"\"]\nlet startofTrainingData = true\nlet vectorsize = 0\n\n//% color=340\n//% color=\"#d79df5\"\n\nnamespace AI {\n    function distance(vec1: number[], vec2: number[]) {\n        let distsquared = 0\n        for (let i = 0; i < vec1.length; i++) {\n            distsquared += (vec1[i] - vec2[i]) * (vec1[i] - vec2[i])\n        }\n        return distsquared\n    }\n    //% block\n    export function setvecsize(size: number) {\n        vectorsize = size\n    }\n    //% block\n    export function addtodata(vector: number[], classname: string) {\n        if (startofTrainingData) {\n            trainingdataVec = [vector]\n            trainingdataClass = [classname]\n            startofTrainingData = false\n        } else {\n            trainingdataVec.push(vector)\n            trainingdataClass.push(classname)\n        }\n    }\n    //% block\n    export function clasify(vector: number[]) {\n        let neardist = Infinity\n        let nearclass = \"\"\n        let temp = 0\n        for (let i = 0; i < trainingdataClass.length; i++) {\n            temp = distance(vector, trainingdataVec[i])\n            if (temp == 0) {\n                nearclass = trainingdataClass[i]\n                break\n            }\n            if (neardist > temp) {\n                neardist = temp\n                nearclass = trainingdataClass[i]\n            }\n        }\n        return nearclass\n    }\n    //% block\n    export function deletetrainingdata() {\n        trainingdataVec = [[0]]\n        trainingdataClass = [\"\"]\n        startofTrainingData = true\n    }\n}","pxt.json":"{\n    \"name\": \"AIextension\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"microphone\": \"*\",\n        \"Screenshot\": \"workspace:b5bce627-58b3-4395-62c8-b32e85436c61\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\",\n        \"AI-clasification.ts\"\n    ],\n    \"preferredEditor\": \"tsprj\"\n}\n"}}],"shares":[],"lastSaveTime":1735065705424}